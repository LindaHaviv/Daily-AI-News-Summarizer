AWSTemplateFormatVersion: '2010-09-09'
Description: AI News Summarizer Infrastructure

Parameters:
  ExistingBucketName:
    Type: String
    Default: ai-news-summarizer-bucket
    Description: The name of an existing S3 bucket to use for the Lambda function code.
  SummarizerLambdaFunctionName:
    Type: String
    Default: ai-news-summarizer-function
    Description: The name of the summarizer Lambda function.

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "lambda-execution-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                Resource:
                  - !Sub "arn:aws:s3:::${ExistingBucketName}/*"
              - Effect: "Allow"
                Action:
                  - "ses:SendEmail"
                  - "ses:SendRawEmail"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "ssm:GetParameter"
                Resource:
                  - "arn:aws:ssm:*:*:parameter/RECIPIENT_EMAIL"
                  - "arn:aws:ssm:*:*:parameter/SENDER_EMAIL"
                  - "arn:aws:ssm:*:*:parameter/BEDROCK_MODEL_ID"
              - Effect: "Allow"
                Action:
                  - "bedrock:InvokeModel"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "lambda:UpdateFunctionCode"
                Resource:
                  - !GetAtt SummarizerLambdaFunction.Arn

  SummarizerLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref SummarizerLambdaFunctionName
      Handler: ai_news_summarizer.main
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ExistingBucketName
        S3Key: ai_news_summarizer.zip
      Runtime: python3.8
      Timeout: 900  # Adjust based on your needs
      Environment:
        Variables:
          PARAMETER_STORE_PATH: "/"

  CodeUpdaterLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: update-lambda-code-function
      Handler: update_lambda_code.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ExistingBucketName
        S3Key: update_lambda_code.zip
      Runtime: python3.8
      Timeout: 300  # Adjust based on your needs
      Environment:
        Variables:
          LAMBDA_FUNCTION_NAME: !Ref SummarizerLambdaFunctionName

  S3BucketNotification:
    Type: AWS::S3::BucketNotification
    Properties:
      Bucket: !Ref ExistingBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .zip
            Function: !GetAtt CodeUpdaterLambdaFunction.Arn

  CloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: 'cron(0 10 * * ? *)'  # Run at 10 AM UTC daily
      Targets:
        - Arn: !GetAtt SummarizerLambdaFunction.Arn
          Id: LambdaTarget

  LambdaInvokePermissionSummarizer:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt SummarizerLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudWatchEventRule.Arn

  LambdaInvokePermissionUpdater:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CodeUpdaterLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub "arn:aws:s3:::${ExistingBucketName}"

Outputs:
  SummarizerLambdaFunctionArn:
    Description: ARN of the created summarizer Lambda function
    Value: !GetAtt SummarizerLambdaFunction.Arn
  S3BucketName:
    Description: Name of the S3 bucket created
    Value: !Ref ExistingBucketName
